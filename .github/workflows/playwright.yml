name: Playwright Tests with Allure Report

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # Runs daily at 9:00 AM UTC
    - cron: '0 9 * * *'
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install chromium --with-deps

    - name: Create .env file
      run: |
        echo "BASE_URL=https://www.saucedemo.com" >> .env
        echo "STANDARD_USER=standard_user" >> .env
        echo "LOCKED_USER=locked_out_user" >> .env
        echo "PROBLEM_USER=problem_user" >> .env
        echo "PERFORMANCE_USER=performance_glitch_user" >> .env
        echo "PASSWORD=secret_sauce" >> .env

    - name: Run Playwright tests
      run: npm test
      continue-on-error: true

    - name: Generate Allure Report
      if: always()
      run: |
        npm run allure:generate

    - name: Upload Playwright HTML Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

    - name: Upload Allure Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: allure-results
        path: allure-results/
        retention-days: 30

    - name: Deploy Allure Report to GitHub Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: allure-report
        destination_dir: reports/${{ github.run_number }}
        keep_files: true

    - name: Create index page for reports
      if: always()
      run: |
        mkdir -p gh-pages-index
        cat > gh-pages-index/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <title>Test Reports</title>
            <meta charset="utf-8">
            <meta name="viewport" content="width=device-width, initial-scale=1">
            <style>
                body {
                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
                    max-width: 1200px;
                    margin: 0 auto;
                    padding: 20px;
                    background: #f5f5f5;
                }
                h1 {
                    color: #333;
                    border-bottom: 3px solid #4CAF50;
                    padding-bottom: 10px;
                }
                .report-link {
                    display: block;
                    padding: 15px;
                    margin: 10px 0;
                    background: white;
                    border-radius: 8px;
                    text-decoration: none;
                    color: #333;
                    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
                    transition: all 0.3s ease;
                }
                .report-link:hover {
                    box-shadow: 0 4px 8px rgba(0,0,0,0.2);
                    transform: translateY(-2px);
                }
                .latest {
                    background: #e8f5e9;
                    border-left: 4px solid #4CAF50;
                }
            </style>
        </head>
        <body>
            <h1>ðŸ§ª SauceDemo Test Reports</h1>
            <p>Automated test execution reports generated by Playwright with Allure</p>
            <a href="reports/${{ github.run_number }}/index.html" class="report-link latest">
                ðŸ“Š Latest Report - Build #${{ github.run_number }}
            </a>
            <p><small>Report generated on: $(date)</small></p>
        </body>
        </html>
        EOF

    - name: Deploy Index Page
      if: always()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: gh-pages-index
        keep_files: true

    - name: Comment PR with report link
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const reportUrl = `https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/reports/${{ github.run_number }}/index.html`;
          const comment = `## ðŸ§ª Test Report
          
          **Test Execution Results:**
          
          ðŸ“Š [View Allure Report](${reportUrl})
          
          **Build:** #${{ github.run_number }}
          **Commit:** ${{ github.sha }}
          **Workflow:** [View Logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
