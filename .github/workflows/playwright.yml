name: Playwright Tests with Allure Report

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # Runs daily at 9:00 AM UTC
    - cron: '0 9 * * *'
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install chromium --with-deps

    - name: Create .env file
      run: |
        echo "BASE_URL=https://www.saucedemo.com" >> .env
        echo "STANDARD_USER=standard_user" >> .env
        echo "LOCKED_USER=locked_out_user" >> .env
        echo "PROBLEM_USER=problem_user" >> .env
        echo "PERFORMANCE_USER=performance_glitch_user" >> .env
        echo "PASSWORD=secret_sauce" >> .env

    - name: Run Playwright tests
      run: npm test
      continue-on-error: true

    - name: Generate Allure Report
      if: always()
      run: |
        cp allure-categories.json allure-results/categories.json
        npm run allure:generate

    - name: Upload Playwright HTML Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

    - name: Upload Allure Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: allure-results
        path: allure-results/
        retention-days: 30

    - name: Create reports directory structure
      if: always()
      run: |
        mkdir -p _site/reports/${{ github.run_number }}
        cp -r allure-report/* _site/reports/${{ github.run_number }}/

    - name: Create index page for reports
      if: always()
      run: |
        CURRENT_DATE=$(date -u +"%B %d, %Y at %H:%M UTC")
        {
          echo '<!DOCTYPE html>'
          echo '<html>'
          echo '<head>'
          echo '    <title>Test Reports</title>'
          echo '    <meta charset="utf-8">'
          echo '    <meta name="viewport" content="width=device-width, initial-scale=1">'
          echo '    <style>'
          echo '        body {'
          echo "            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;"
          echo '            max-width: 1200px;'
          echo '            margin: 0 auto;'
          echo '            padding: 20px;'
          echo '            background: #f5f5f5;'
          echo '        }'
          echo '        h1 {'
          echo '            color: #333;'
          echo '            border-bottom: 3px solid #4CAF50;'
          echo '            padding-bottom: 10px;'
          echo '        }'
          echo '        .report-link {'
          echo '            display: block;'
          echo '            padding: 15px;'
          echo '            margin: 10px 0;'
          echo '            background: white;'
          echo '            border-radius: 8px;'
          echo '            text-decoration: none;'
          echo '            color: #333;'
          echo '            box-shadow: 0 2px 4px rgba(0,0,0,0.1);'
          echo '            transition: all 0.3s ease;'
          echo '        }'
          echo '        .report-link:hover {'
          echo '            box-shadow: 0 4px 8px rgba(0,0,0,0.2);'
          echo '            transform: translateY(-2px);'
          echo '        }'
          echo '        .latest {'
          echo '            background: #e8f5e9;'
          echo '            border-left: 4px solid #4CAF50;'
          echo '        }'
          echo '    </style>'
          echo '</head>'
          echo '<body>'
          echo '    <h1>ðŸ§ª SauceDemo Test Reports</h1>'
          echo '    <p>Automated test execution reports generated by Playwright with Allure</p>'
          echo "    <a href=\"reports/${{ github.run_number }}/index.html\" class=\"report-link latest\">"
          echo "        ðŸ“Š Latest Report - Build #${{ github.run_number }}"
          echo '    </a>'
          echo "    <p><small>Report generated on: $CURRENT_DATE</small></p>"
          echo '</body>'
          echo '</html>'
        } > _site/index.html

    - name: Setup Pages
      if: always()
      uses: actions/configure-pages@v4

    - name: Upload artifact
      if: always()
      uses: actions/upload-pages-artifact@v3
      with:
        path: '_site'

    - name: Deploy to GitHub Pages
      if: always()
      id: deployment
      uses: actions/deploy-pages@v4

    - name: Comment PR with report link
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const reportUrl = `https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/reports/${{ github.run_number }}/index.html`;
          const comment = `## ðŸ§ª Test Report
          
          **Test Execution Results:**
          
          ðŸ“Š [View Allure Report](${reportUrl})
          
          **Build:** #${{ github.run_number }}
          **Commit:** ${{ github.sha }}
          **Workflow:** [View Logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
